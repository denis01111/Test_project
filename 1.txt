# Урок 3. Работа с удаленными репозиториями. #

## Разграничение понятий Git и GitHub.

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/638c09e1-f6b6-4f9f-8c20-3c54b378b268/Untitled.png)

| Git | GitHub |
| --- | --- |
| Освоить работу с удаленными репозиториями, которые находятся 
не на локальной, а на удаленной машине, например, на сервере.  | Сервис компании Майкрософт для организации работы удаленных репозиториев |
| git — одна из систем контроля версий  | Самый популярный сервис Git  |
| Способ организации и поддержания версионности  | Много полезных функций |
| Самая популярная система контроля версий | Огромный архив различного кода |

## Работа с удаленными репозиториями. Скачивание из текущего репозитория и слияние со своей версией.

Копировать внешний репозиторий на свой ПК можно командой **git clone**.

git clone - не только загружает, но и сливает ветки. 

git pull - эта команда позволяет скачать все из текущего репозитория и автоматически сделать merge с нашей версией. 

git push - отправить свою версию в удаленный репозиторий. Требуется авторизация. 

## Как настроить совместную работу

1. Создать аккаунт на [GitHub.com](http://github.com/)
2. Создать локальный репозиторий
3. “Подружить” ваш локальный и удалённый репозитории. GitHub при создании нового репозитория подскажет, как это можно сделать
4. Отправить (push) ваш локальный репозиторий в удалённый (на GitHub), при этом, возможно, вам нужно будет авторизоваться на удалённом репозитории 
5. Провести изменения “с другого компьютера”
6. Выкачать (pull) актуальное состояние из удалённого репозитория# Урок 3. Работа с удаленными репозиториями.

## Разграничение понятий Git и GitHub.

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/638c09e1-f6b6-4f9f-8c20-3c54b378b268/Untitled.png)

| Git | GitHub |
| --- | --- |
| Освоить работу с удаленными репозиториями, которые находятся 
не на локальной, а на удаленной машине, например, на сервере.  | Сервис компании Майкрософт для организации работы удаленных репозиториев |
| git — одна из систем контроля версий  | Самый популярный сервис Git  |
| Способ организации и поддержания версионности  | Много полезных функций |
| Самая популярная система контроля версий | Огромный архив различного кода |

## Работа с удаленными репозиториями. Скачивание из текущего репозитория и слияние со своей версией.

Копировать внешний репозиторий на свой ПК можно командой **git clone**.

git clone - не только загружает, но и сливает ветки. 

git pull - эта команда позволяет скачать все из текущего репозитория и автоматически сделать merge с нашей версией. 

git push - отправить свою версию в удаленный репозиторий. Требуется авторизация. 

## Как настроить совместную работу

1. Создать аккаунт на [GitHub.com](http://github.com/)
2. Создать локальный репозиторий
3. “Подружить” ваш локальный и удалённый репозитории. GitHub при создании нового репозитория подскажет, как это можно сделать
4. Отправить (push) ваш локальный репозиторий в удалённый (на GitHub), при этом, возможно, вам нужно будет авторизоваться на удалённом репозитории 
5. Провести изменения “с другого компьютера”
6. Выкачать (pull) актуальное состояние из удалённого репозитория

**pull request:**
➜ команда для предложения изменений
➜ запрос на вливание изменений в репозиторий
В больших компаниях один ответственный за проект создает аккаунт. Другие пользователи дают команду pull request. Предлагать изменения на GitHub нужно в отдельной ветке. Сначала
пользователь копирует репозиторий на свой компьютер, делает fork репозитория, затем
клонирует версию на своём ПК, создаёт ветку с предлагаемыми изменениями, отправляет
изменения командой push в свой аккаунт на GitHub и даёт команду pull request.

## Как сделать pull request

1. Делаем   (ответвление) репозитория fork
2. Делаем git clone   версии репозитория СВОЕЙ
3. Создаем новую ветку и в НЕЕ вносим свои изменения 
4. Фиксируем изменения (делаем коммиты) 
5. Отправляем свою версию в свой GitHub 
6. На сайте GitHub нажимаем кнопку pull reques

**pull request:**
➜ команда для предложения изменений
➜ запрос на вливание изменений в репозиторий
В больших компаниях один ответственный за проект создает аккаунт. Другие пользователи дают команду pull request. Предлагать изменения на GitHub нужно в отдельной ветке. Сначала
пользователь копирует репозиторий на свой компьютер, делает fork репозитория, затем
клонирует версию на своём ПК, создаёт ветку с предлагаемыми изменениями, отправляет
изменения командой push в свой аккаунт на GitHub и даёт команду pull request.

## Как сделать pull request

1. Делаем   (ответвление) репозитория fork
2. Делаем git clone   версии репозитория СВОЕЙ
3. Создаем новую ветку и в НЕЕ вносим свои изменения 
4. Фиксируем изменения (делаем коммиты) 
5. Отправляем свою версию в свой GitHub 
6. На сайте GitHub нажимаем кнопку pull reques